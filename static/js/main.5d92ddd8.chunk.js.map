{"version":3,"sources":["components/InforUser/index.js","components/Square/index.js","components/Rows/index.js","components/TictoctoeApp/index.js","components/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["InforUser","onClickReset","statusSquare","handleTimeOut","startGame","useState","timer","setTimer","user","setUser","useEffect","localStorage","getItem","newUser","JSON","parse","idTimer","setInterval","prevState","clearInterval","className","user1","style","color","onClick","ghost","user2","Square","handleClickSquare","idRow","idCol","square","Rows","rows","map","TictoctoeApp","dataRows","setDataRows","setStatusSquare","winer","setWiner","clearData","setClearData","setStartGame","row","allRows","success","setTimeout","messWin","duration","message","loading","then","info","newDataRows","checkWin","checkRow","checkCol","cheo1","index","cal1","cheo2","cal2","checkWinX","checkWinO","arrCheck","indexX","logicCheck","str","scoreCheck","i","j","statusSquareLose","Option","Select","error","mess","Login","inforUser","setInforUser","onChange","value","console","log","target","size","placeholder","prefix","UserOutlined","rules","required","width","optionFilterProp","e","preventDefault","setItem","stringify","saveUser","shape","href","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d92ddd8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./InforUser.css\";\nimport { Button } from \"antd\";\n\nexport default function InforUser({\n  onClickReset,\n  statusSquare,\n  handleTimeOut,\n  startGame,\n}) {\n  const [timer, setTimer] = useState(60);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"user-tictoctoe\");\n    const newUser = JSON.parse(user);\n    if (user) {\n      setUser(newUser);\n    }\n  }, []);\n\n  useEffect(() => {\n    let idTimer = null;\n    if (startGame) {\n      setTimer(60);\n      idTimer = setInterval(() => {\n        setTimer((prevState) => prevState - 1);\n      }, 1000);\n    } else {\n      setTimer(60);\n    }\n\n    return () => clearInterval(idTimer);\n  }, [statusSquare, startGame]);\n\n  useEffect(() => {\n    if (timer < 50) {\n      handleTimeOut(statusSquare);\n    }\n  }, [timer, statusSquare, handleTimeOut]);\n\n  return (\n    <>\n      <div className=\"form_user\">\n        <div className=\"user user1\">{user.user1}</div>\n\n        <div\n          className=\"user_status\"\n          style={\n            statusSquare === 1\n              ? { color: \"rgb(152, 1, 147)\" }\n              : { color: \"rgb(201, 201, 201)\" }\n          }\n        >\n          X\n        </div>\n      </div>\n      <div className=\"form_control\">\n        <span className=\"time\">{timer}</span>\n        <Button onClick={onClickReset} className=\"button_reset\" ghost>\n          Reset\n        </Button>\n      </div>\n      <div className=\"form_user\">\n        <div className=\"user user2\">{user.user2}</div>\n\n        <div\n          className=\"user_status\"\n          style={\n            statusSquare === 2\n              ? { color: \"rgb(152, 1, 147)\" }\n              : { color: \"rgb(201, 201, 201)\" }\n          }\n        >\n          O\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./Square.css\";\n\nexport default function Square({ handleClickSquare, idRow, idCol, square }) {\n  return (\n    <button\n      className=\"square\"\n      style={\n        square === \"X\"\n          ? { color: \"rgb(8, 109, 57)\" }\n          : { color: \"rgb(140, 37, 18)\" }\n      }\n      onClick={() => handleClickSquare(idRow, idCol)}\n    >\n      {square}\n    </button>\n  );\n}\n","import React from \"react\";\nimport Square from \"../Square\";\nimport \"./Rows.css\";\n\nexport default function Rows({ rows, handleClickSquare, idRow }) {\n  //   console.log(rows);\n  return (\n    <div className=\"rows\">\n      {rows &&\n        rows.map((square, idCol) => {\n          return (\n            <Square\n              key={idCol}\n              idCol={idCol}\n              idRow={idRow}\n              square={square}\n              handleClickSquare={handleClickSquare}\n            />\n          );\n        })}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport InforUser from \"../InforUser\";\nimport Rows from \"../Rows\";\nimport \"./TictoctoeApp.css\";\nimport { message } from \"antd\";\n\nexport default function TictoctoeApp() {\n  const [dataRows, setDataRows] = useState([]);\n  const [statusSquare, setStatusSquare] = useState(1);\n  const [winer, setWiner] = useState(0);\n  const [clearData, setClearData] = useState(true);\n  const [startGame, setStartGame] = useState(false);\n\n  useEffect(() => {\n    if (clearData) {\n      const row = [null, null, null, null, null, null, null, null, null, null];\n      const allRows = [\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n        [...row],\n      ];\n      setDataRows(allRows);\n      setClearData(false);\n    }\n  }, [clearData]);\n\n  useEffect(() => {\n    if (winer === 1) {\n      const messWin = `reset game after 2s`;\n      success(messWin, 2);\n      setTimeout(() => {\n        setClearData(true);\n      }, 2000);\n    }\n    if (winer && winer !== 1) {\n      const messWin = `${winer} win, reset game after 5s`;\n      success(messWin, 4.5);\n      setTimeout(() => {\n        setClearData(true);\n      }, 5000);\n    }\n  }, [winer]);\n\n  const success = (messWin, duration) => {\n    message.loading(messWin, duration).then(() => message.info(\"Done!\", 1.5));\n  };\n\n  const handleClickSquare = (idRow, idCol) => {\n    const newDataRows = [...dataRows];\n    let dataSquare = newDataRows[idRow][idCol];\n\n    if (!dataSquare) {\n      setStartGame(true);\n      if (statusSquare === 1) {\n        newDataRows[idRow][idCol] = \"X\";\n        setStatusSquare(2);\n        checkWin(idRow, idCol);\n      } else {\n        newDataRows[idRow][idCol] = \"O\";\n        setStatusSquare(1);\n        checkWin(idRow, idCol);\n      }\n    } else {\n      return;\n    }\n    setDataRows(newDataRows);\n  };\n\n  const checkWin = (idRow, idCol) => {\n    setWiner(0);\n    const checkRow = dataRows[idRow];\n    const checkCol = dataRows.map((rows) => {\n      return rows[idCol];\n    });\n\n    function cal1(rows, index) {\n      if (index === idRow) return rows[idCol];\n      if (index < idRow) return rows[index + idCol - idRow];\n      if (index > idRow) return rows[index + idCol - idRow];\n    }\n\n    function cal2(rows, index) {\n      if (index === idRow) return rows[idCol];\n      if (index < idRow) return rows[idCol + idRow - index];\n      if (index > idRow) return rows[idCol + idRow - index];\n    }\n\n    const cheo1 = dataRows.map((rows, index) => {\n      return cal1(rows, index);\n    });\n\n    const cheo2 = dataRows.map((rows, index) => {\n      return cal2(rows, index);\n    });\n\n    checkWinX(checkRow);\n    checkWinX(checkCol);\n    checkWinX(cheo1);\n    checkWinX(cheo2);\n    checkWinO(checkRow);\n    checkWinO(checkCol);\n    checkWinO(cheo1);\n    checkWinO(cheo2);\n  };\n\n  const checkWinX = (arrCheck) => {\n    const indexX = arrCheck.map((square, index) => {\n      return square === \"X\" ? index : null;\n    });\n    logicCheck(indexX, \"X\");\n  };\n\n  const checkWinO = (arrCheck) => {\n    const indexX = arrCheck.map((square, index) => {\n      return square === \"O\" ? index : null;\n    });\n    logicCheck(indexX, \"O\");\n  };\n\n  const logicCheck = (arrCheck, str) => {\n    let scoreCheck = 1;\n    for (let i = 0; i < 10; i++) {\n      for (let j = i; j < i + 5; j++) {\n        if (scoreCheck < 5) {\n          if (arrCheck[j] === arrCheck[j + 1] - 1) {\n            scoreCheck = scoreCheck + 1;\n          } else {\n            scoreCheck = 0;\n          }\n        }\n      }\n    }\n    if (scoreCheck === 5) {\n      setWiner(str);\n      setStartGame(false);\n    }\n  };\n\n  const onClickReset = () => {\n    setWiner(1);\n    setStartGame(false);\n  };\n\n  const handleTimeOut = (statusSquareLose) => {\n    setWiner(statusSquare === 1 ? \"O\" : \"X\");\n    setStartGame(false);\n  };\n\n  return (\n    <>\n      <div className=\"main_user\">\n        <InforUser\n          handleTimeOut={handleTimeOut}\n          statusSquare={statusSquare}\n          onClickReset={onClickReset}\n          startGame={startGame}\n        />\n      </div>\n      <div className=\"main_app\">\n        {dataRows.map((rows, idRow) => {\n          return (\n            <Rows\n              key={idRow}\n              idRow={idRow}\n              rows={rows}\n              handleClickSquare={handleClickSquare}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Input } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { Select } from \"antd\";\nimport { message, Space } from \"antd\";\n\nconst { Option } = Select;\nconst error = (mess) => {\n  message.error(mess);\n};\n\nexport default function Login() {\n  const [inforUser, setInforUser] = useState({\n    user1: \"\",\n    user2: \"\",\n  });\n\n  function onChange(value) {\n    console.log(`selected ${value}`);\n  }\n\n  const saveUser = (e) => {\n    if (inforUser.user1 === \"\" && inforUser.user2 !== \"\") {\n      e.preventDefault();\n      error(`Please fill User 1`);\n    }\n    if (inforUser.user1 !== \"\" && inforUser.user2 === \"\") {\n      e.preventDefault();\n      error(`Please fill User 2`);\n    }\n    if (inforUser.user1 === \"\" && inforUser.user2 === \"\") {\n      e.preventDefault();\n      error(`Please fill User 1 and User 2`);\n    }\n    localStorage.setItem(\"user-tictoctoe\", JSON.stringify(inforUser));\n  };\n\n  const onChaneUser1 = (value) => {\n    const user1 = value.target.value;\n    setInforUser({ user2: inforUser.user2, user1: user1 });\n  };\n  const onChaneUser2 = (value) => {\n    const user2 = value.target.value;\n    setInforUser({ user1: inforUser.user1, user2: user2 });\n  };\n\n  return (\n    <div className=\"form_login\">\n      <h1>My Tictoctoe</h1>\n      <div className=\"form_choice\">\n        <Input\n          onChange={onChaneUser1}\n          value={inforUser.user1}\n          className=\"input_user\"\n          size=\"large\"\n          placeholder=\"Input User 1\"\n          prefix={<UserOutlined />}\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        />\n        <Input\n          onChange={onChaneUser2}\n          value={inforUser.user2}\n          className=\"input_user\"\n          size=\"large\"\n          placeholder=\"Input User 2\"\n          prefix={<UserOutlined />}\n        />\n\n        <div className=\"form_select\">\n          <Select\n            style={{ width: 136 }}\n            placeholder=\"Select\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n          >\n            <Option value=\"jack\">Jack</Option>\n            <Option value=\"lucy\">Lucy</Option>\n            <Option value=\"tom\">Tom</Option>\n          </Select>\n\n          <Select\n            style={{ width: 136 }}\n            placeholder=\"Select\"\n            optionFilterProp=\"children\"\n            onChange={onChange}\n          >\n            <Option value=\"jack\">Jack</Option>\n            <Option value=\"lucy\">Lucy</Option>\n            <Option value=\"tom\">Tom</Option>\n          </Select>\n        </div>\n      </div>\n\n      <Button\n        onClick={(e) => saveUser(e)}\n        shape=\"round\"\n        className=\"button_start\"\n        href=\"/tictoctoeapp\"\n      >\n        START\n      </Button>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport TictoctoeApp from \"./components/TictoctoeApp\";\nimport \"antd/dist/antd.css\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/tictoctoeapp\" component={TictoctoeApp} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}